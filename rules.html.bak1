<script type="text/javascript">
        var gk_isXlsx = false;
        var gk_xlsxFileLookup = {};
        var gk_fileData = {};
        function filledCell(cell) {
          return cell !== '' && cell != null;
        }
        function loadFileData(filename) {
        if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
            try {
                var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
                var firstSheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[firstSheetName];

                // Convert sheet to JSON to filter blank rows
                var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
                // Filter out blank rows (rows where all cells are empty, null, or undefined)
                var filteredData = jsonData.filter(row => row.some(filledCell));

                // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
                var headerRowIndex = filteredData.findIndex((row, index) =>
                  row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
                );
                // Fallback
                if (headerRowIndex === -1 || headerRowIndex > 25) {
                  headerRowIndex = 0;
                }

                // Convert filtered JSON back to CSV
                var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
                csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
                return csv;
            } catch (e) {
                console.error(e);
                return "";
            }
        }
        return gk_fileData[filename] || "";
        }
        </script><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rules - Ambition</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 font-sans">
    <div class="container mx-auto p-4">
        <h1 class="text-3xl font-bold mb-4">Rules of Ambition</h1>
        <p class="mb-4">Welcome to Ambition, a game designed to help you track and achieve your goals through a points-based system. Below are the rules to guide you.</p>

        <h2 class="text-2xl font-semibold mb-2">Game Rules</h2>
        <ul class="list-disc pl-5 mb-4">
            <li><strong>Tasks</strong>: Add tasks with a category, optional Urgent/Important flags, and notes.</li>
            <li><strong>Categories & Points</strong>:
                <ul class="list-disc pl-5 mb-4">
                    <li><strong>Relevant (5 points)</strong>: Tasks directly tied to your core goals or priorities, such as advancing a key project or personal objective.</li>
                    <li><strong>Other (3 points)</strong>: Tasks that contribute to your goals but are less critical, like secondary activities or exploratory work.</li>
                    <li><strong>Chores (2 points)</strong>: Routine household or maintenance tasks, such as cleaning, grocery shopping, or organizing.</li>
                    <li><strong>People (5 points)</strong>: Activities that build or maintain relationships, like spending time with family, networking, or supporting friends.</li>
                    <li><strong>Backlog (5 points)</strong>: Tasks deferred from previous plans that need completion, such as clearing overdue work or addressing pending items.</li>
                    <li><strong>Abspielen(Leisure) (1 point)</strong>: Relaxing or recreational activities that recharge you, like watching a movie, gaming, or hobbies.</li>
                </ul>
            </li>
            <li><strong>Bonuses</strong>: +4 points for Urgent, +4 for Important (e.g., Relevant + Urgent = 9 points).</li>
            <li><strong>Goals</strong>: Set main goals to guide your tasks. Link tasks to goals during creation or editing to track progress toward specific objectives.</li>
            <li><strong>Task Filtering</strong>: Filter tasks by goal to focus on specific objectives, or view all tasks to see your full workload.</li>
            <li><strong>Backlog Decay</strong>: Tasks move to Backlog (5 points) after a set number of days (configurable in Settings).</li>
            <li><strong>Points Tracking</strong>: Lifetime Points and daily scores update on task completion. Progress bar fills to 1000 points.</li>
            <li><strong>Data</strong>: Tasks and goals are stored in your browser’s localStorage, so they’re private to your device.</li>
        </ul>
        <p>Complete tasks, earn points, and level up your productivity!</p>
    </div>
</body>
</html>